# This is a basic workflow to help you get started with Actions

name: Docker Builds

# Controls when the workflow will run
on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * *"
  push:
    branches:
      - "master"
      - "dev"
      - "experimental"
    tags:
      - "v*.*.*"
    paths-ignore:
      - 'charts/**'
  pull_request:
    branches:
      - "master"
      - "dev"
    paths-ignore:
      - 'charts/**'

permissions:
  contents: read
  packages: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-pms:
    runs-on: ubuntu-latest
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta for PMS
        id: meta_pms
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/FelixClements/clusterplex_pms
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push PMS
        uses: docker/build-push-action@v5
        with:
          context: ./pms
          file: ./pms/extended-image/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_pms.outputs.tags }}
          labels: ${{ steps.meta_pms.outputs.labels }}

  build-worker:
    runs-on: ubuntu-latest
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta for Worker
        id: meta_worker
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/FelixClements/clusterplex_worker
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Worker
        uses: docker/build-push-action@v5
        with:
          context: ./worker
          file: ./worker/extended-image/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_worker.outputs.tags }}
          labels: ${{ steps.meta_worker.outputs.labels }}

  build-orchestrator:
    runs-on: ubuntu-latest
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta for Orchestrator
        id: meta_orchestrator
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/FelixClements/clusterplex_orchestrator
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Orchestrator
        uses: docker/build-push-action@v5
        with:
          context: ./orchestrator
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_orchestrator.outputs.tags }}
          labels: ${{ steps.meta_orchestrator.outputs.labels }}
